{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuBMC,EAAoB,sBAEpBC,EAAO,CACXC,OAAQC,SAASC,cAAc,kBAC/BC,SAAUF,SAASC,cAAc,2BACjCE,QAASH,SAASC,cAAc,yBAG5BG,EAAY,IAqBlB,WACE,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQZ,IAClD,GAAkB,OAAdQ,EACF,OAEFP,EAAKI,SAASQ,MAAQL,EAAmB,SAAK,GAC9CP,EAAKK,QAAQO,MAAQL,EAAiB,OAAK,E,CAzB7CM,GAEAb,EAAKC,OAAOa,iBAAiB,SAAS,EAAAjB,EAAAkB,WAItC,SAAsBC,GACpBV,EAAUU,EAAMC,OAAOC,MAAQF,EAAMC,OAAOL,MAC5C,IAAMO,EAAeX,KAAKY,UAAUd,GACpCI,aAAaW,QAAQtB,EAAmBoB,E,GAPmB,MAE7DnB,EAAKC,OAAOa,iBAAiB,UAQ7B,SAAoBE,GAClBA,EAAMM,iBACNN,EAAMO,cAAcC,QACJhB,KAAKC,MAAMC,aAAaC,QAAQZ,IAChDW,aAAae,WAAW1B,E","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\n// HTML містить розмітку форми. Напиши скрипт, який буде зберігати значення полів у локальне сховище, коли користувач щось друкує.\n\n// <form class=\"feedback-form\" autocomplete=\"off\">\n//   <label>\n//     Email\n//     <input type=\"email\" name=\"email\" autofocus />\n//   </label>\n//   <label>\n//     Message\n//     <textarea name=\"message\" rows=\"8\"></textarea>\n//   </label>\n//   <button type=\"submit\">Submit</button>\n// </form>\n\n// Виконуй це завдання у файлах 03-feedback.html і 03-feedback.js. Розбий його на декілька підзавдань:\n\n// Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з полями email і message, у яких зберігай поточні значення полів форми. Нехай ключем для сховища буде рядок \"feedback-form-state\".\n// Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, заповнюй ними поля форми. В іншому випадку поля повинні бути порожніми.\n// Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт з полями email, message та їхніми поточними значеннями.\n// Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n\nconst LOCAL_STORAGE_KEY = 'feedback-form-state';\n\nconst refs = {\n  formEl: document.querySelector('.feedback-form'),\n  textarea: document.querySelector('.feedback-form textarea'),\n  inputEl: document.querySelector('.feedback-form input'),\n};\n\nconst formDatas = {};\n\nfillTextarea();\n\nrefs.formEl.addEventListener('input', throttle(onTAreaInput, 500));\n\nrefs.formEl.addEventListener('submit', submitForm);\n\nfunction onTAreaInput(event) {\n  formDatas[event.target.name] = event.target.value;\n  const strigifyData = JSON.stringify(formDatas);\n  localStorage.setItem(LOCAL_STORAGE_KEY, strigifyData);\n}\n\nfunction submitForm(event) {\n  event.preventDefault();\n  event.currentTarget.reset();\n  const dataObj = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n}\n\nfunction fillTextarea() {\n  const savedMess = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  if (savedMess === null) {\n    return;\n  }\n  refs.textarea.value = savedMess['message'] || '';\n  refs.inputEl.value = savedMess['email'] || '';\n}\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$LOCAL_STORAGE_KEY","$b00c40859be242c5$var$refs","formEl","document","querySelector","textarea","inputEl","$b00c40859be242c5$var$formDatas","savedMess","JSON","parse","localStorage","getItem","value","$b00c40859be242c5$var$fillTextarea","addEventListener","throttle","event","target","name","strigifyData","stringify","setItem","preventDefault","currentTarget","reset","removeItem"],"version":3,"file":"03-feedback.7cb71a40.js.map"}